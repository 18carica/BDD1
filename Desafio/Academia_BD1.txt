group: Academia_BD1

description[[ Banco de dados basico sobre uma academia, para a lista de exercicios de Algebra Relacional, da disciplina de Banco de Dados I - Prof. Paulo Giovano

* A Relação _CLIENTES_ contém informações básicas sobre clientes da academia.
* A relação _DEPENDENTES_ contém informações básicas sobre os dependentes.
* A Relação _MODALIDADES_ contém informações básicas sobre as modalidades realizados pelos professores.
* A Relação _PROFESSORES_ contém informações básicas sobre os professores da academia.
* A Relação _MATRICULAS_ contém informações básicas sobre clientes da academia.
]]

CLIENTES = {
CodCli, NomeCli, GeneroCli, TelCli, EmailCli
1, 'Edson', M, '966778888', 'edson@uol.com.br'
2, 'Marina', F, '946332222', 'marina@gmail.com'
3, 'Ana', F, '998009999', 'ana@gmail.com'
4, 'Maria', F, '987779090', 'maria@gmail.com'
5, 'Pedro', M, '990900000', 'pedro@yahoo.com.br'
6, 'Marcos', M, '995556666', 'marcos@bol.com.br'
7, 'Cintia', F, '991111212', 'cintia@bol.com.br'
8, 'Larissa', F, '996667777', 'larissa@uol.com.br'
9, 'Miguel', M, '998444545', 'miguel@uol.com.br'
10, 'Jorge', M, '995123333', 'jorge@gmail.com'
11, 'Lopes', M, '999123456', 'lopes@gmail.com'
12, 'Bruno', M, '988560906', 'bruno@yahoo.com.br'
13, 'Keila', F, '994432113', 'keila@gmail.com'
14, 'Liliam', F, '998000909', 'liliam@bol.com.br'
15, 'Kelly', F, '996677433', 'kelly@gmail.com'
16, 'Fábio', M, '980805050', 'fabio@uol.com.br'
17, 'Lorena', F, '987761313', 'lorena@gmail.com'
18, 'Márcia', F, '993112100', 'marcia@bol.com.br'
19, 'Poliana', F, '996550099', 'poliana@yahoo.com.br'
20, 'Aldo', M, '98999990', 'aldo@gmail.com'
}

DEPENDENTES = {
CodDep, NomeDep, GeneroDep, CodCli
1, 'Marcelo', M, 1
2, 'Carina', F, 1
3, 'Walmir', M, 1
4, 'Alison', M, 2
5, 'Helder', M, 3
6, 'Lucas', M, 3
7, 'Miriam', F, 4
8, 'Simone', F, 4
9, 'Heitor', M, 5
10, 'Yasmin', F, 6
11, 'Felipe', M, 7
12, 'Hugo', M, 7
13, 'Luciana', F, 7
14, 'Vera', F, 7
}

MODALIDADES = {
CodMod, NomeMod, CodProf
1, 'Aikido', 1
2, 'Capoeira', 2
3, 'Judo', 7
4, 'Kung-Fu', 6
5, 'Musculação', 4
6, 'Ginástica', 5
7, 'Boxe', 9
8, 'Luta-Livre', 13
9, 'Karatê', 10
10, 'Jiu-Jitsu', 7
11, 'Muay-Thay', 11
12, 'Dança', 5
13, 'Ballet', 3
14, 'Futebol', 12
15, 'Basquete', 12
16, 'Vôlei', 12
}

PROFESSORES = {
CodProf, NomeProf, GeneroProf
1, 'Paulo', M
2, 'Murilo', M
3, 'Érica', F
4, 'Vanessa', F
5, 'Michele', F
6, 'Luís', M
7, 'Tiago', M
8, 'Monik', F
9, 'Carlos', M
10, 'Eduardo', M
11, 'Alex', M
12, 'Roger', M
13, 'Nuno', M
}

MATRICULAS = {
CodMat, CodCli, CodMod
1, 1, 1
2, 1, 5
3, 1, 15
4, 2, 2
5, 2, 5
6, 2, 14
7, 2, 16
8, 3, 12
9, 3, 13
10, 4, 12
11, 4, 13
12, 4, 5
13, 4, 1
14, 5, 9
15, 6, 9
16, 7, 11
17, 8, 11
18, 9, 11
19, 10, 7
20, 10, 3
21, 10, 4
22, 11, 7
23, 12, 8
24, 12, 10
25, 13, 15
26, 13, 16
27, 13, 6
28, 13, 12
29, 14, 5
30, 15, 5
31, 15, 7
32, 15, 11
33, 16, 1
34, 17, 2
35, 17, 5
36, 17, 5
37, 17, 16
38, 18, 12
39, 18, 13
40, 18, 9
41, 19, 12
42, 19, 13
43, 19, 1
44, 20, 14
45, 20, 15
46, 20, 16
47, 20, 3
48, 20, 5
49, 20, 10
50, 20, 8
}


1. Faça a projeção de todos os atributos da relação CLIENTES.
(CLIENTES)

2. Faça a projeção de todos os atributos da relação CLIENTES. Ordene o resultado por
ordem alfabética.
(τ NomeCli asc (CLIENTES))

3. Faça a projeção dos atributos referentes ao código, nome e gênero existentes dentro
da relação CLIENTES.
π CodCli, NomeCli, GeneroCli (CLIENTES)

4. Faça a projeção dos atributos referentes ao código, nome e gênero existentes dentro
da relação CLIENTES. Recupere somente as informações dos clientes do sexo
feminino.
σ GeneroCli = 'F' (π CodCli, NomeCli, GeneroCli (CLIENTES))

5. Faça a projeção de todos os atributos da relação DEPENDENTES cujo gênero seja
masculino.
σ GeneroDep = 'M' (DEPENDENTES)

6. Faça a projeção de todos os atributos da relação DEPENDENTES cujo gênero seja
masculino ou o código do cliente seja maior ou igual a 3.
σ GeneroDep = 'M' ∨ CodCli ≥ 3 (DEPENDENTES)

7. Faça a projeção do nome do cliente, seu gênero e telefone. Recupere também o
nome e gênero de todos os seus dependentes.
π CLIENTES.NomeCli, 
	CLIENTES.GeneroCli, 
	CLIENTES.TelCli, 
	DEPENDENTES.NomeDep, 
	DEPENDENTES.GeneroDep 
	(σ CLIENTES.CodCli = DEPENDENTES.CodCli (DEPENDENTES ⨯ CLIENTES))

8. Faça a projeção de todos os atributos da relação PROFESSORES cujo gênero seja
masculino.
σ GeneroProf = 'M' (PROFESSORES)

9. Faça a projeção do código do professor, seu nome e o nome da modalidade que ele
ensina.
π PROFESSORES.CodProf, 
	PROFESSORES.NomeProf, 
	MODALIDADES.NomeMod 
	(σ PROFESSORES.CodProf = MODALIDADES.CodProf (PROFESSORES ⨯ MODALIDADES))

10. Faça a projeção do código do professor, seu nome e o nome da modalidade que ele
ensina. Recupere somente os dados dos professores do sexo feminino.
π PROFESSORES.CodProf, 
	PROFESSORES.NomeProf, 
	MODALIDADES.NomeMod 
	(σ PROFESSORES.CodProf = MODALIDADES.CodProf ∧ PROFESSORES.GeneroProf = 'F'(PROFESSORES ⨯ MODALIDADES))

11. Faça a projeção do código do aluno, seu nome, seu email e o nome da modalidade
que ele pratica.
π CLIENTES.CodCli, 
	CLIENTES.NomeCli, 
	CLIENTES.EmailCli, 
	MODALIDADES.NomeMod (σ MATRICULAS.CodCli = CLIENTES.CodCli ∧ MATRICULAS.CodMod = MODALIDADES.CodMod ((MODALIDADES ⨯ CLIENTES) ⨯ MATRICULAS))

12. Faça a projeção do código do aluno, seu nome, seu email e o nome da modalidade
que ele pratica. Recupere somente os dados de quem pratica Aikido.
π CLIENTES.CodCli, 
	CLIENTES.NomeCli, 
	CLIENTES.EmailCli, 
	MODALIDADES.NomeMod 
	(σ MATRICULAS.CodCli = CLIENTES.CodCli ∧ MATRICULAS.CodMod = MODALIDADES.CodMod ∧ MODALIDADES.NomeMod = 'Aikido' ((MODALIDADES ⨯ CLIENTES) ⨯ MATRICULAS))

13. Faça a projeção do código do aluno, seu nome, seu email e o nome da modalidade
que ele pratica. Recupere somente os dados de quem pratica Musculação, Basquete
ou Hung-Fu.
π CLIENTES.CodCli, 
	CLIENTES.NomeCli, 
	CLIENTES.EmailCli, 
	MODALIDADES.NomeMod 
	(σ MATRICULAS.CodCli = CLIENTES.CodCli ∧ MATRICULAS.CodMod = MODALIDADES.CodMod ∧ MODALIDADES.NomeMod = 'Musculação' ∨ MODALIDADES.NomeMod = 'Basquete' ∨ MODALIDADES.NomeMod = 'HungFu'((MODALIDADES ⨯ MATRICULAS) ⨯ CLIENTES))

14. Faça a projeção do código do aluno, seu nome, seu email e o nome da modalidade
que ele pratica e o nome do professor que ensina essa modalidade.
π CLIENTES.CodCli, 
	CLIENTES.NomeCli, 
	CLIENTES.EmailCli, 
	MODALIDADES.NomeMod, 
	PROFESSORES.NomeProf 
	(σ MATRICULAS.CodCli = CLIENTES.CodCli ∧ MATRICULAS.CodMod = MODALIDADES.CodMod ∧ PROFESSORES.CodProf = MODALIDADES.CodProf (((MODALIDADES ⨯ CLIENTES) ⨯ MATRICULAS) ⨯ PROFESSORES))

15. Faça a projeção do código da modalidade, seu nome, o nome do cliente que a pratica
e o nome de seu instrutor. Ordene o resultado pelo nome da modalidade.
τ NomeMod asc 
	(π MODALIDADES.CodMod, 
		MODALIDADES.NomeMod, 
		CLIENTES.NomeCli, 
		PROFESSORES.NomeProf 
		(σ MATRICULAS.CodCli = CLIENTES.CodCli ∧ MATRICULAS.CodMod = MODALIDADES.CodMod ∧ MODALIDADES.CodProf = PROFESSORES.CodProf (((MODALIDADES ⨯ CLIENTES) ⨯ MATRICULAS) ⨯
PROFESSORES)))

16. Faça a projeção do nome do cliente, nome do seu professor e nome da modalidade
que ele pratica. Recupere somente os dados referentes ao professor Roger.
π CLIENTES.NomeCli, 
	PROFESSORES.NomeProf, 
	MODALIDADES.NomeMod 
	(σ MATRICULAS.CodCli = CLIENTES.CodCli ∧ MATRICULAS.CodMod = MODALIDADES.CodMod ∧ MODALIDADES.CodProf = PROFESSORES.CodProf ∧ PROFESSORES.NomeProf = 'Roger' ((MATRICULAS ⨯ MODALIDADES) ⨯ (CLIENTES ⨯ PROFESSORES)))

17. Faça a projeção do nome da modalidade e o total de alunos que cada uma delas
possui. Recupere o resultado ordenando em ordem alfabética pelo nome da
modalidade.
τ NomeMod asc 
	(π MODALIDADES.NomeMod, 
	TOTAL γ NomeMod; COUNT(CLIENTES.CodCli) → TOTAL 
	(σ MATRICULAS.CodCli = CLIENTES.CodCli ∧ MATRICULAS.CodMod = MODALIDADES.CodMod ((MATRICULAS ⨯ MODALIDADES) ⨯ CLIENTES)))

18. Faça a projeção do nome dos professores e da quantidade de alunos de cada um
deles. Ordene o resultado pelo total de alunos de cada modalidade, em ordem
decrescente.
τ TOTAL desc 
	(π MODALIDADES.NomeMod, 
	TOTAL γ NomeMod; COUNT(CLIENTES.CodCli) → TOTAL 
	(σ MATRICULAS.CodCli = CLIENTES.CodCli ∧ MATRICULAS.CodMod = MODALIDADES.CodMod ((MATRICULAS ⨯ MODALIDADES) ⨯ CLIENTES)))

19. Faça a projeção do nome dos alunos e da quantidade de modalidades que cada um
pratica. Ordene o resultado pelo nome do aluno.
τ NomeCli asc 
	(π CLIENTES.NomeCli, 
	TOTAL γ NomeCli; COUNT(MODALIDADES.CodMod) → TOTAL 
	(σ MATRICULAS.CodCli = CLIENTES.CodCli ∧ MATRICULAS.CodMod = MODALIDADES.CodMod ((MATRICULAS ⨯ MODALIDADES) ⨯ CLIENTES)))

20. Faça a projeção do nome dos clientes e da quantidade de dependentes que cada um
deles possui. Ordene o resultado de acordo com o total de dependentes de cada
cliente em ordem decrescente.
τ TOTAL desc 
	(π CLIENTES.NomeCli, 
	TOTAL γ NomeCli; COUNT(DEPENDENTES.CodDep) → TOTAL 
	(σ CLIENTES.CodCli = DEPENDENTES.CodCli (DEPENDENTES ⨯ CLIENTES)))